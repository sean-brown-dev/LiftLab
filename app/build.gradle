plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.devtools.ksp'
}

android {
    namespace 'com.browntowndev.liftlab'
    compileSdk 34

    defaultConfig {
        applicationId "com.browntowndev.liftlab"
        minSdk 29
        targetSdk 34
        versionCode 6
        versionName "1.5"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        ksp {
            arg("room.schemaLocation", "$projectDir/schemas")
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.7'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}


dependencies {
    def nav_version = '2.7.7'
    def material_version = '1.2.1'
    def room_version = '2.6.1'
    def lifecycle_version = '2.7.0'
    def kotlin_coroutines_version = '1.8.0'
    def compose_version = '1.6.3'
    def kotlin_reflect_version = '1.9.23'
    def eventbus_version = '3.3.1'
    def mockkVersion = '1.13.10'
    def vico_version = '2.0.0-alpha.11'
    def koin_version = '3.5.3'

    implementation 'androidx.core:core-splashscreen:1.0.1'

    implementation "org.greenrobot:eventbus:$eventbus_version"
    kapt "org.greenrobot:eventbus-annotation-processor:$eventbus_version"

    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_reflect_version"
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.activity:activity-compose:1.8.2'
    implementation platform('androidx.compose:compose-bom:2024.02.02')
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"

    // Compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-graphics:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation 'androidx.compose.runtime:runtime-livedata:1.6.3'
    implementation "androidx.compose.ui:ui-util:$compose_version"

    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material3:material3:$material_version"

    // Third Party
    implementation 'sh.calvin.reorderable:reorderable:1.3.3'
    implementation 'io.arrow-kt:arrow-core:1.2.3'
    implementation 'io.arrow-kt:arrow-fx-coroutines:1.2.3'
    implementation 'de.raphaelebner:roomdatabasebackup:1.0.0-beta14'

    // Work
    implementation 'androidx.work:work-runtime-ktx:2.9.0'
    implementation 'androidx.work:work-runtime:2.9.0'

    // Annotation
    implementation "javax.annotation:javax.annotation-api:1.3.2"

    // Room
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-common:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    ksp "androidx.room:room-compiler:$room_version"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    implementation "androidx.navigation:navigation-compose:$nav_version"

    // Gson
    implementation 'com.google.code.gson:gson:2.10.1'

    // Koin
    implementation "io.insert-koin:koin-core:$koin_version"
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Testing
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.8.0'
    testImplementation 'androidx.arch.core:core-testing:2.2.0'
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2024.02.02')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.6.3'
    debugImplementation 'androidx.compose.ui:ui-tooling:1.6.3'
    debugImplementation 'androidx.compose.ui:ui-test-manifest:1.6.3'

    // Vico Charts
    // For Jetpack Compose.
    implementation("com.patrykandpatrick.vico:compose:$vico_version")
    // For `compose`. Creates a `ChartStyle` based on an M3 Material Theme.
    implementation("com.patrykandpatrick.vico:compose-m3:$vico_version")
    // Houses the core logic for charts and other elements. Included in all other modules.
    implementation("com.patrykandpatrick.vico:core:$vico_version")
    // For the view system.
    implementation("com.patrykandpatrick.vico:views:$vico_version")
}
ksp {
    arg("room.generateKotlin", "true")
}
kapt {
    arguments {
        arg('eventBusIndex', 'com.com.browntowndev.liftlab.EventBusIndex')
    }
}